package ua.nure.filonitch.practice4;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Iterator;
import java.util.NoSuchElementException;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

class Parser implements Iterable<String> {

	private static final String ENCODING = "Cp1251";

	private Matcher patternMatcher;

	public Parser(File linkOfFile)  {
		StringBuilder sb = new StringBuilder();
		Pattern patt = Pattern.compile("\\p{Lu}.*?\\.");
		Scanner scan = null;
		try {
			scan = new Scanner(linkOfFile, ENCODING);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		while (scan.hasNextLine()) {
			sb.append(scan.nextLine()).append(" ");
			setPatternMatcher(patt.matcher(sb));
		}
		scan.close();
	}

	public Matcher getPatternMatcher() {
		// TODO Auto-generated catch block
		return patternMatcher;
	}

	public final void setPatternMatcher(Matcher patternMatcher) {
		// TODO Auto-generated catch block
		this.patternMatcher = patternMatcher;
	}

	@Override
	public Iterator<String> iterator() {
		// TODO Auto-generated catch block
		return new ParserIterator(getPatternMatcher());
	}

	private static class ParserIterator implements Iterator<String> {
		// TODO Auto-generated catch block

		private Matcher match;

		public ParserIterator(Matcher matcher) {
			// TODO Auto-generated catch block
			this.match = matcher;
		}

		@Override
		public boolean hasNext() {
			// TODO Auto-generated catch block
			return match.find();
		}

		@Override
		public String next() {
			int ind = 0;
			if (ind != 0 && !hasNext()) {
				throw new NoSuchElementException();
			}
			return match.group().replace("  ", " ");
		}

		@Override
		public void remove() {
			// TODO Auto-generated catch block
		}

	}

}
