package ua.nure.filonitch.practice1;

public class Part7 {
	public static final int NUMBER = 64;
	public static final int NUMBER_OF_SYSTEM = 26;
	private static final String ARROW = " ==> ";

	public static void main(String[] args) {

		String[] array = { "A", "B", "Z", "AA", "AZ", "BA", "ZZ", "AAA" };
		for (int i = 0; i < array.length; i++) {
			System.out.println(array[i] + ARROW + str2int(array[i]) + ARROW + int2str(str2int(array[i])));
		}
	}

	public static int str2int(String number) {
		int sum = 0;
		for (int i = 0, j = number.length() - 1; i < number.length(); i++, j--) {
			sum += (number.charAt(j) - NUMBER) * Math.pow(NUMBER_OF_SYSTEM, i);
		}
		return sum;
	}

	public static String int2str(int number) {
		StringBuilder a = new StringBuilder();
		StringBuilder b = new StringBuilder();
		int mod;
		int div = number;
		while (div != 0) {
			mod = div % NUMBER_OF_SYSTEM;
			if (mod == 0) {
				a.append("Z");
				div = (div - 1) / NUMBER_OF_SYSTEM;
			} else {
				a.append((char) (mod + NUMBER));
				div = (div - mod) / NUMBER_OF_SYSTEM;
			}
		}
		for (int i = 0; i < a.length(); i++) {
			b.append(a.charAt(a.length() - i - 1));
		}

		return b.toString();
	}

	public static String rightColumn(String number) {
		String chars;
		int letters;
		letters = str2int(number);
		letters++;
		chars = int2str(letters);
		return chars;
	}
}
